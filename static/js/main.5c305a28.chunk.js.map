{"version":3,"sources":["Card.js","App.js","index.js"],"names":["Card","props","className","user","results","map","data","index","countryFilter","location","country","src","picture","large","height","width","alt","name","first","last","email","city","App","useState","usersData","setUserData","setCountries","setCountryFilter","useEffect","fetchData","a","axios","get","response","countries","Set","item","console","error","message","countryButton","id","onClick","e","target","buttonList","document","getElementsByTagName","style","backgroundColor","color","note","getElementById","clickHandle","rootElement","ReactDOM","render"],"mappings":"sOA4DeA,EA5DF,SAACC,GACZ,OACE,qBAAKC,UAAU,WAAf,SACGD,EAAME,KAAKC,QAAQC,KAAI,SAACC,EAAMC,GAC7B,OAAIN,EAAMO,eAAiBF,EAAKG,SAASC,SA0Bd,IAAvBT,EAAMO,cAxBN,sBAAKN,UAAU,YAAf,UACE,8BACE,qBACEA,UAAU,YACVS,IAAKL,EAAKM,QAAQC,MAClBC,OAAO,QACPC,MAAM,QACNC,IAAI,UAGR,sBAAKd,UAAU,UAAf,UACE,+BACGI,EAAKW,KAAKC,MADb,IACqBZ,EAAKW,KAAKE,QAE/B,4BACE,4BAAIb,EAAKc,UAEX,+BACGd,EAAKG,SAASY,KADjB,KACyBf,EAAKG,SAASC,gBAlBXH,QAwBpC,QCzBO,SAASe,IACtB,MAAiCC,mBAAS,MAA1C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAgCF,mBAAS,IAAzC,mBAAOb,EAAP,KAAgBgB,EAAhB,KACA,EAA0CH,mBAAS,IAAnD,mBAAOf,EAAP,KAAsBmB,EAAtB,KAEAC,qBAAU,WACR,IAAMC,EAAS,uCAAG,gCAAAC,EAAA,+EAEmBC,IAAMC,IACrC,0CAHY,gBAEAC,EAFA,EAEN3B,KAIRmB,EAAYQ,GACNC,EAPQ,YAQT,IAAIC,IAAIF,EAAS7B,QAAQC,KAAI,SAAC+B,GAAD,OAAUA,EAAK3B,SAASC,aAE1DgB,EAAaQ,GAVC,kDAYdG,QAAQC,MAAM,KAAMC,SAZN,0DAAH,qDAefV,MACC,IAcH,IAAIW,EAAgB,GAgBpB,OAfI9B,IACF8B,EAAgB9B,EAAQL,KAAI,SAACK,EAASH,GACpC,OACE,wBAEEL,UAAU,SACVuC,GAAI/B,EACJgC,QAAS,SAACC,GAAD,OApBjB,SAAqBA,GACnBhB,EAAiBgB,EAAEC,OAAOH,IAC1B,IAFsB,EAEhBI,EAAaC,SAASC,qBAAqB,UAF3B,cAGLF,GAHK,IAGtB,2BAA6B,CAAC,IAArBT,EAAoB,QAC3BA,EAAKY,MAAMC,gBAAkB,UAC7Bb,EAAKY,MAAME,MAAQ,SALC,8BAOtB,IAAMC,EAAOL,SAASM,eAAeT,EAAEC,OAAOH,IAC9CU,EAAKH,MAAMC,gBAAkB,SAC7BE,EAAKH,MAAME,MAAQ,QAWGG,CAAYV,IAJ9B,SAMGjC,GALIH,OAYX,gCACGiC,EACAhB,EAAY,cAAC,EAAD,CAAMrB,KAAMqB,EAAWhB,cAAeA,IAAoB,MCvD7E,IAAM8C,EAAcR,SAASM,eAAe,QAC5CG,IAASC,OACP,cAAC,aAAD,UACE,cAAClC,EAAD,MAEFgC,K","file":"static/js/main.5c305a28.chunk.js","sourcesContent":["const Card = (props) => {\n  return (\n    <div className=\"flex-box\">\n      {props.user.results.map((data, index) => {\n        if (props.countryFilter == data.location.country)\n          return (\n            <div className=\"flex-item\" key={index}>\n              <div>\n                <img\n                  className=\"userImage\"\n                  src={data.picture.large}\n                  height=\"200px\"\n                  width=\"210px\"\n                  alt=\"img\"\n                ></img>\n              </div>\n              <div className=\"details\">\n                <h2>\n                  {data.name.first} {data.name.last}\n                </h2>\n                <p>\n                  <i>{data.email}</i>\n                </p>\n                <h3>\n                  {data.location.city}, {data.location.country}\n                </h3>\n              </div>\n            </div>\n          );\n\n        if (props.countryFilter == \"\") {\n          return (\n            <div className=\"flex-item\" key={index}>\n              <div>\n                <img\n                  className=\"userImage\"\n                  src={data.picture.large}\n                  height=\"200px\"\n                  width=\"210px\"\n                  alt=\"img\"\n                ></img>\n              </div>\n              <div className=\"details\">\n                <h2>\n                  {data.name.first} {data.name.last}\n                </h2>\n                <p>\n                  <i>{data.email}</i>\n                </p>\n                <h3>\n                  {data.location.city}, {data.location.country}\n                </h3>\n              </div>\n            </div>\n          );\n        }\n      })}\n    </div>\n  );\n};\nexport default Card;\n","import \"./styles.css\";\nimport axios from \"axios\";\nimport Card from \"./Card\";\nimport { useState, useEffect } from \"react\";\n\nexport default function App() {\n  const [usersData, setUserData] = useState(null);\n  const [country, setCountries] = useState(\"\");\n  const [countryFilter, setCountryFilter] = useState(\"\");\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const { data: response } = await axios.get(\n          \"https://randomuser.me/api/?results=100\"\n        );\n\n        setUserData(response);\n        const countries = [\n          ...new Set(response.results.map((item) => item.location.country))\n        ];\n        setCountries(countries);\n      } catch (error) {\n        console.error(error.message);\n      }\n    };\n    fetchData();\n  }, []);\n\n  function clickHandle(e) {\n    setCountryFilter(e.target.id);\n    const buttonList = document.getElementsByTagName(\"button\");\n    for (let item of buttonList) {\n      item.style.backgroundColor = \"#0d0d0d\";\n      item.style.color = \"white\";\n    }\n    const note = document.getElementById(e.target.id);\n    note.style.backgroundColor = \"yellow\";\n    note.style.color = \"black\";\n  }\n\n  let countryButton = \"\";\n  if (country) {\n    countryButton = country.map((country, index) => {\n      return (\n        <button\n          key={index}\n          className=\"button\"\n          id={country}\n          onClick={(e) => clickHandle(e)}\n        >\n          {country}\n        </button>\n      );\n    });\n  }\n\n  return (\n    <div>\n      {countryButton}\n      {usersData ? <Card user={usersData} countryFilter={countryFilter} /> : \"\"}\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}